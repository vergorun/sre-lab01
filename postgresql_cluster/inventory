# Please specify the ip addresses and connection settings for your environment
# The specified ip addresses will be used to listen by the cluster components.
# Attention! Specify private IP addresses so that the cluster does not listen a public IP addresses.
# For deploying via public IPs, add 'ansible_host=public_ip_address' variable for each node.

# "postgresql_exists='true'" if PostgreSQL is already exists and running
# "hostname=" variable is optional (used to change the server name)
# "new_node=true" to add a new server to an existing cluster using the add_pgnode.yml playbook

# In this example, all components will be installed on PostgreSQL nodes.
# You can deploy the haproxy balancers and the etcd or consul cluster on other dedicated servers (recomended).

# if dcs_exists: false and dcs_type: "etcd"
[etcd_cluster]  # recommendation: 3, or 5-7 nodes
10.0.10.6 ansible_ssh_host=etcd3-pvt.sre.lab
10.0.10.5 ansible_ssh_host=etcd2-pvt.sre.lab
10.0.10.4 ansible_ssh_host=etcd1-pvt.sre.lab

# if with_haproxy_load_balancing: true
[balancers]
10.0.10.6 ansible_ssh_host=lb-pvt.sre.lab

# PostgreSQL nodes
[master]
10.0.10.2 ansible_ssh_host=db1-pvt.sre.lab hostname=db1 postgresql_exists=false

[replica]
10.0.10.3 ansible_ssh_host=db2-pvt.sre.lab hostname=db2 postgresql_exists=false

[postgres_cluster:children]
master
replica

# Connection settings
[all:vars]
ansible_connection='ssh'
ansible_ssh_port='22'
ansible_user='mcuser'
ansible_ssh_private_key_file=/home/mcuser/.ssh/id_ed25519_mc_lab

#[test]
#localhost